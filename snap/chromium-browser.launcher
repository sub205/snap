#!/bin/bash

if [ "$SNAP_ARCH" == "amd64" ]; then
    ARCH="x86_64-linux-gnu"
elif [ "$SNAP_ARCH" == "armhf" ]; then
    ARCH="arm-linux-gnueabihf"
elif [ "$SNAP_ARCH" == "arm64" ]; then
    ARCH="aarch64-linux-gnu"
else
    ARCH="$SNAP_ARCH-linux-gnu"
fi

export PATH=$PATH:$SNAP/bin
export LD_LIBRARY_PATH=$SNAP/usr/lib/$ARCH:$LD_LIBRARY_PATH

export LD_PRELOAD=${SNAP}/lib/libxwayland-preload.so
export SNAPPY_PRELOAD=${SNAP}

# Create $XDG_RUNTIME_DIR if not exists (to be removed when LP: #1738197 is fixed)
[ -n "$XDG_RUNTIME_DIR" ] && mkdir -p $XDG_RUNTIME_DIR -m 700

# XDG_RUNTIME_DIR is /run/user/<uid>/snap.$SNAP, but is snap-specific. Wayland servers
# will place their socket in the shared /run/user/<uid> directory, so symlink it into
# this XDG_RUNTIME_DIR.
# For details:
# https://forum.snapcraft.io/t/wayland-dconf-and-xdg-runtime-dir/186/10
if [ -n "$XDG_RUNTIME_DIR" ]; then
    wdisplay="wayland-0"
    if [ -n "$WAYLAND_DISPLAY" ]; then
        wdisplay="$WAYLAND_DISPLAY"
    fi
    wayland_sockpath="$XDG_RUNTIME_DIR/../$wdisplay"
    wayland_snappath="$XDG_RUNTIME_DIR/$wdisplay"
    if [ -S "$wayland_sockpath" ]; then
        # create the compat symlink for now
        if [ ! -e "$wayland_snappath" ]; then
            ln -s "$wayland_sockpath" "$wayland_snappath"
        fi
    fi
fi

# Mesa Libs
export LD_LIBRARY_PATH=${MIR_LIBS}/mesa:$LD_LIBRARY_PATH
export LD_LIBRARY_PATH=${MIR_LIBS}/mesa-egl:$LD_LIBRARY_PATH

# XKB config
export XKB_CONFIG_ROOT=$SNAP/usr/share/X11/xkb

# XDG Config
export XDG_CONFIG_HOME=$SNAP_DATA
export XDG_CONFIG_DIRS=$SNAP/etc/xdg:$XDG_CONFIG_DIRS
export XDG_CONFIG_DIRS=$SNAP/usr/xdg:$XDG_CONFIG_DIRS
export XDG_DATA_DIRS=$SNAP/usr/share:$XDG_DATA_DIRS
export XDG_DATA_HOME=$SNAP_DATA

# needed for fontconfig
export FONTCONFIG_PATH=$SNAP/etc/fonts/config.d
export FONTCONFIG_FILE=$SNAP/etc/fonts/fonts.conf

export ARCH

export LC_ALL="C.UTF-8"

while true; do
    port=0

    while [ -e "/tmp/.X11-unix/X${port}" ]; do
        let port+=1
    done

    Xwayland -reset -terminate :${port} &
    sleep 0.5 #FIXME: racey. Better to put the following into ~/.xinit
    DISPLAY=:${port} matchbox-window-manager -use_titlebar no &

    DISPLAY=:${port} "$SNAP/usr/lib/chromium-browser/chromium-browser" \
        --no-default-browser-check --no-first-run \
        --no-sandbox \
        --disable-gpu-sandbox \
        --start-fullscreen \
        --disable-infobars \
        --app https://www.youtube.com \
        "$@"
        # Cannot run as root and be sandboxed at the same time, but then need
        # to hide the "warning sandboxing disabled" banner
        # app mode is like a kiosk

    echo "retrying chromium-mir-browser in 1 second"
    sleep 1
done
